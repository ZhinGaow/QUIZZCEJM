// R√©cup√©rer mes 3 blocks div HTML (le header, la div questions et la div result)
let header_screen = document.getElementById("header_screen");
let questions_screen = document.getElementById("questions_screen");
let result_screen = document.getElementById("result_screen");

// Etablir la fonction Quiz permettant d'ajouter des questions et de voir combien de bonnes r√©ponse le user a
function Quiz(){
    this.questions = [];
    this.nbrCorrects = 0;
    this.indexCurrentQuestion = 0;

    // Ajouts de questions
    this.addQuestion = function(question) {
        this.questions.push(question);
    }

    // Fonction servant √† passer √† la question suivante s'il y en a une, sinon √ßa affiche le r√©sultat final 
    this.displayCurrentQuestion = function() {
        if(this.indexCurrentQuestion < this.questions.length) {
            this.questions[this.indexCurrentQuestion].getElement(
                this.indexCurrentQuestion + 1, this.questions.length
            );
        }
        else {
            questions_screen.style.display = "none";

            let NbrCorrectUser = document.querySelector("#nbrCorrects");
            NbrCorrectUser.textContent = quiz.nbrCorrects;
            result_screen.style.display = "block";
        }
    }
}


// Fonction Question permettant de cr√©er les questions avec le titre, les r√©ponses et la r√©ponse correcte
function Question(title, answers, correctAnswers) {
    this.title = title,
    this.answers = answers,
    this.correctAnswers = correctAnswers,

    // Mise en place et structuration du HTML et CSS pour mes questions
    this.getElement = function(indexQuestion, nbrOfQuestions) {
        let questionTitle = document.createElement("h3");
        questionTitle.classList.add("title_questions");
        questionTitle.textContent = this.title;

        // Le append sert √† afficher le html (il existe le after et le prepend si on veut afficher au-dessus ou en-dessous)
        questions_screen.append(questionTitle);

        let questionAnswer = document.createElement("ul");
        questionAnswer.classList.add("list_questions");

        // Boucle en ForEach pour placer √† chaque fois un <li> pour chaque r√©ponse
        this.answers.forEach((answer, index) => {
            let answerElement =  document.createElement("li");
            answerElement.classList.add("answers");
            answerElement.textContent = answer;
            answerElement.id = index + 1;
            answerElement.addEventListener("click", this.checkAnswer)
    
            questionAnswer.append(answerElement);
        });

        // Fonction pour voir √† combien de question on est sur le total de questions pr√©sents
        let questionNumber = document.createElement("h4");
        questionNumber.classList.add("avancement_question");
        questionNumber.textContent = "Questions : " + indexQuestion + "/" + nbrOfQuestions;

        questions_screen.append(questionNumber);

        questions_screen.append(questionAnswer);
    }

    this.addAnswer = function(answer) {
        this.answers.push(answer);
    },

    // Ici on va checker la r√©ponse correcte avec une √©coute d'√©v√®nement :
    this.checkAnswer = (e) => { 
        let answerSelect = e.target;
        if (this.isCorrectAnswer(answerSelect.id)) {
            answerSelect.classList.add("answersCorrect");
            quiz.nbrCorrects++;
        } else {
            answerSelect.classList.add("answersWrong");
            let RightAnswers = this.correctAnswers.map(index => document.getElementById(index));
            RightAnswers.forEach(RightAnswer => {
                RightAnswer.classList.add("answersCorrect");
            });
        }

        // V√©rifiez si toutes les bonnes r√©ponses ont √©t√© s√©lectionn√©es
        const allCorrectAnswersSelected = this.correctAnswers.every(index => {
            return document.getElementById(index).classList.contains("answersCorrect");
        });

        // Si toutes les bonnes r√©ponses ont √©t√© s√©lectionn√©es, passez √† la question suivante
        if (allCorrectAnswersSelected) {
            setTimeout(function() {
                questions_screen.textContent = '';
                quiz.indexCurrentQuestion++;
                quiz.displayCurrentQuestion();
            }, 1100);
        }
    }

    // Si la r√©ponse choisit par le user est √©gale √† la r√©ponse correcte retourner True sinon False
    this.isCorrectAnswer = function(answerUser) {
        return this.correctAnswers.includes(parseInt(answerUser)); // V√©rifie si la r√©ponse est dans les r√©ponses correctes
    }
};


// On va r√©cup√©rer notre fonction Quiz pour impl√©menter ses donn√©es dans ses arguments 
// Partie Cr√©ation des mes donn√©es de Questions :
let quiz = new Quiz();

let question1 = new Question(" Qu'est-ce qu'une structure d'entreprise ? ", ["Elle va d√©finir le statue juridique de l'entreprise (SARL, SAS, SASU, EURL...)", "Elle va d√©finir la r√©partition des taches des pouvoirs des responsabilit√©s" ], [2]);
quiz.addQuestion(question1);

let question2 = new Question("Quels sont les param√®tres de conception d'une structure d'entreprise ?", ["La centralisation et la d√©centralisation des d√©cisions", "La centralisation et la d√©centralisation des actionnaires", "Une coh√©rence de l'ensemble des actions", "Ajouter les employ√©s plus pr√©sent", "Les d√©tails des t√¢ches du travail ou de la sp√©cialisation"], [1,3,5]);
quiz.addQuestion(question2);

let question3 = new Question("Quelles sont les caract√©ristiques principales des nouvelles structures  ? ", ["La centralisation de la prise de d√©cisions", "Les tendances √† augmenter les nouvelles hi√©rarchies", "Aucune des deux"], [3]);
quiz.addQuestion(question3);

let question4 = new Question(" Quelles sont vraiment les caract√©ristiques principales des nouvelles structures üòè  ?   ", ["La d√©centralisation de la prise de d√©cisions", "La red√©finition des fronti√®re des pays", "La redifinition des fronti√®res de l'entreprise", "Les tendances de mode", "Les tendances du march√©", "Les tendances √† r√©duire les nouvelles hi√©rarchies"], [1,3,6]);
quiz.addQuestion(question4);

let question5 = new Question("C'est quoi red√©finir les fronti√®res de l'entreprise ? ", ["Agrandir l'entreprise ", "Revoir le nombre d'employ√© dans l'entreprise", " D√©terminer clairement les limites et les √©tendues de l'organisation"], [3]);
quiz.addQuestion(question5);




// Ici je suis oblig√© de passer par un querySelectroAll pour avoir acc√®s √† la fonction ForEach (car le getElement ne le poss√®de pas)
let NbrQuestion = document.querySelectorAll(".nbrQuestion");

NbrQuestion.forEach(function(NbrQuestion) {
    NbrQuestion.textContent = quiz.questions.length;
});


// Fonction servant √† lancer le questionnaire en enlevant la page d'introduction du quiz et en mettant la premi√®re question
function startQuestions() {
    header_screen.style.display = "none";
    questions_screen.style.display = "block";

    quiz.displayCurrentQuestion();
}


// R√©cup√©rer le bouton dans mon html avec le ElementById car le ElementsByClassName n'a pas le addEventListener)
let btn_start = document.getElementById("btn_start");
btn_start.addEventListener("click", startQuestions);
